Database 
it is the storage of all the data belonging to a particular product
for eg: The Data of the Project A


Database -> Collections
it is the partitions in the database that denotes specific parts or sections
for eg: The A project might have a collections of User ids or info of the user

Database -> Collections -> Document
viewing of a particular data in the collections
for eg: In the A project, in the user collections fetching of the data of a particular user.

CODE    Database
--------------------------------
mongoose.connect    ->  database create
model create        ->  collections
CREATE code         ->  Document

ORM - Object Relation Mapping
ODM - Object Document Mapping 

Schema -
the identies that all of them have the same user form of data's

Authentication - 
Validating the user before performing any tasks

Authorization - 
The roles that are assigned to specific users and accordingly they can perform the tasks

Server requests for the Authentication everytime we request for some task completion. 
Even if we have been authenticated before.

To overcome this problem we have a unique string created by the backend that is attached to the frontend after accepting the request and sending a response.
That string is used everytime (request attached with the unique string) the frontend tries to interact with the backend and remembers the Authentication of the user.

bcrypt - 
Used for the encrypt and decrypt

syntax for it -
    bcrypt.genSalt(10, (err,salt)=>{
        bcrypt.hash('Safar', salt, (err, hash)=>{
            console.log("hash:",hash)
        });
    });

for eg:
password => iaeejfoajfoeia (hashed value using the bcrypt)

jwt (json web tokens) - 
1. data of the algo
2. actual data that is hashed
3. signature related data

has the above mentioned in their data that is used to validate or authenticate the user and accept a request and provide the response for a task